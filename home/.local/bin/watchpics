#!/bin/bash
# watchpics: Watch a directory for new images and optimize them
#
# Dependencies:
# - cjpeg from MozJPEG (https://github.com/mozilla/mozjpeg)
# - convert from ImageMagick (https://www.imagemagick.org/)
# - oxipng (https://github.com/shssoichiro/oxipng)
# - watchexec (https://github.com/watchexec/watchexec)
#
# Copyright © 2018 Hugo Locurcio
# Licensed under CC0 1.0 Universal: https://creativecommons.org/publicdomain/zero/1.0/

set -euo pipefail
IFS=$'\n\t'

# The directory to watch
DIR="${XDG_PICTURES_DIR:-$HOME/Pictures}"

# The minimal size for images to be converted to JPEG
# The original PNG image is preserved and optimized
export JPEG_SIZE_THRESHOLD=2000

# The JPEG quality to use (0-100)
export JPEG_QUALITY=90

echo "Watching $DIR for new images…"

optimize_png() {
  png_image="$1"
  jpeg_image="${png_image%.*}.jpg"

  if [[ "$(du -k "$png_image" | cut -f 1)" -gt "$JPEG_SIZE_THRESHOLD" ]]; then
    # Convert to JPEG if the image size in kilobytes is larger than the size threshold
    echo -n "[mozjpeg] "
    cjpeg -quality "$JPEG_QUALITY" "$png_image" > "$jpeg_image" &
  fi

  echo -n "[oxipng] "
  oxipng -o4 --strip all "$png_image" &
}
export -f optimize_png

watch_func() {
  set -euo pipefail
  IFS=$'\n\t'

  if [[ ! -z "${WATCHEXEC_WRITTEN_PATH+x}" ]]; then
    if [[ $(file -ib "$WATCHEXEC_WRITTEN_PATH") == "image/x-tga; charset=binary" ]]; then
      tga_image="${WATCHEXEC_WRITTEN_PATH}"
      png_image="${WATCHEXEC_WRITTEN_PATH%.*}.png"

      # Convert TGA images to PNG (typically screenshots from old games)
      # They are converted to uncompressed PNG as they are optimized later on
      echo -n "[tga -> png] "
      convert -define png:compression-level=0 "$tga_image" "$png_image"

      # The original TGA is not needed anymore
      rm "$tga_image"

      # Optimize the newly-created PNG image
      optimize_png "$png_image"
    fi

    if [[ $(file -ib "") == "image/png; charset=binary" ]]; then
      # Only operate on PNG images
      optimize_png "$WATCHEXEC_WRITTEN_PATH"
    fi
  fi
}
export -f watch_func

watchexec -p -w "$DIR" watch_func
